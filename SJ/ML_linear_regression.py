# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qlmkiq7dTqs2WiK85H2pFH8nwlc_gy9M
"""

import torch
import numpy as np
import matplotlib.pyplot as plt

x_data = [1.0, 2.0, 3.0]
y_data = [2.0, 4.0, 6.0]

#Plot it all
plt.plot(x_data, y_data)
plt.xlabel('Hours')
plt.ylabel('Points')
plt.show()

w = 1.0 #a random guess : random value

#our model for the forward pass
def forward(x):
  return x*w
def loss(x, y):
  y_pred = forward(x)
  return (y_pred-y)**2

for w in np.arange(0.0, 4.1, 0.1):
  print('w= ', w)
  l_sum = 0 # loss sum
  for x_val, y_val in zip(x_data, y_data):
    y_pred_val = forward(x_val)
    l = loss(x_val, y_val)
    l_sum += l
    print('\t', x_val, y_val, y_pred_val, l)
  print("MSE = ", l_sum/len(x_data))

#List of weights/Mean square Error for each input
w_list = []
mes_list = []

for w in np.arange(0.0, 4.1, 0.1):
  l_sum = 0
  for x_val, y_val in zip(x_data, y_data):
    y_pred_val = forward(x_val)
    l = loss(x_val, y_val)
    l_sum += l
  w_list.append(w)
  mes_list.append(l_sum/len(x_data))

plt.plot(w_list, mes_list)
plt.xlabel('Weight')
plt.ylabel('Loss')
plt.show()

x_data = [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0]
y_data = [0.1, 0.3, 0.4, 0.5, 0.7, 0.8, 1.0]

w_list = []
mse_list = []


for w in np.arange(0.0, 4.1, 0.1):
  l_sum = 0
  for x_val, y_val in zip(x_data, y_data):
    y_pred_val = forward(x_val)
    l = loss(x_val, y_val)
    l_sum += l
  w_list.append(w)
  mse_list.append(l_sum/len(x_data))

plt.plot(w_list, mse_list)
plt.xlabel('W')
plt.ylabel('Loss')
plt.show()

